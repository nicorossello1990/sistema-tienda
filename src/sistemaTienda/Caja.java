/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sistemaTienda;

import claseConectar.Dominio;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Point;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Ezenic
 */
public class Caja extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    Principal p;
    
    public Caja(Principal p) {
        initComponents();       
        this.p = p;
        cargar(desde.getDate(),hasta.getDate());
        Dominio.centrarDatos(tfacturas);
        this.setLocation((this.p.getSize().width/2)-(this.getWidth()/2), (this.p.getSize().height/2)-(this.getHeight()/2));  
        configuracionEstandarComponentes();
    }
    
     private void configuracionEstandarComponentes() {
         UsuarioLogueado usuarioLogueado = this.p.usuarioLogueado;             
          if (!usuarioLogueado.getPermisos().contains("PUEDE VER DATOS SENSIBLES EN CAJA")){
              tfacturas.removeColumn(tfacturas.getColumnModel().getColumn(8));
              tfacturas.removeColumn(tfacturas.getColumnModel().getColumn(8));
              cos.setVisible(false);
              gan.setVisible(false);
          }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfacturas = new javax.swing.JTable();
        gan = new javax.swing.JTextField();
        ent = new javax.swing.JTextField();
        cantidad = new javax.swing.JLabel();
        tot = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        afavor = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        desde = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hasta = new com.toedter.calendar.JDateChooser();
        mostrar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        clienteRadio = new javax.swing.JRadioButton();
        formaRadio = new javax.swing.JRadioButton();
        comprobanteRadio = new javax.swing.JRadioButton();
        cliente = new javax.swing.JTextField();
        forma = new javax.swing.JComboBox<>();
        comprobante = new javax.swing.JComboBox<>();
        estadoRadio = new javax.swing.JRadioButton();
        estado = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CAJA");
        setAutoscrolls(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de Facturas de Ventas"));

        tfacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Numero", "Cliente", "Forma de Pago", "Comprobante", "Descuento (Promedio %)", "Motivo", "Estado", "Costos", "Ganancias", "Entregado", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tfacturas.getTableHeader().setReorderingAllowed(false);
        tfacturas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tfacturasMouseMoved(evt);
            }
        });
        tfacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfacturasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfacturasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfacturasMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(tfacturas);

        gan.setEditable(false);
        gan.setEnabled(false);
        gan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ganActionPerformed(evt);
            }
        });

        ent.setEnabled(false);

        cantidad.setText("Cantidad de Facturas de Ventas: 0");

        tot.setEnabled(false);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("TOTAL: ");

        cos.setEditable(false);
        cos.setEnabled(false);

        jLabel5.setText("Saldo a favor de Clientes:");

        afavor.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(265, 265, 265)
                        .addComponent(afavor, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(cantidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(gan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ent, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cos, ent, gan, tot});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(afavor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cantidad)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cos, ent, gan, tot});

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Elija la fecha de las facturas de ventas"));

        desde.setBackground(new java.awt.Color(255, 0, 51));
        desde.setForeground(java.awt.Color.blue);
        desde.setToolTipText("");
        desde.setDate(new Date());
        desde.setMinSelectableDate(new java.util.Date(-62135755099000L));
        desde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                desdeMouseReleased(evt);
            }
        });
        desde.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                desdePropertyChange(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/excel.png"))); // NOI18N
        jButton1.setText("Exportar a Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Desde");

        jLabel2.setText("Hasta");

        hasta.setDate(new Date());
        hasta.setMinSelectableDate(new java.util.Date(-62135755099000L));
        hasta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                hastaPropertyChange(evt);
            }
        });

        mostrar.setText("Mostrar Todas las Facturas de Ventas");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });

        jButton2.setText("Mostrar las Facturas de Venta del dia actual");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 0, 102));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setText("Filtrar Por:");

        clienteRadio.setText("Cliente");
        clienteRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteRadioActionPerformed(evt);
            }
        });

        formaRadio.setText("Forma de Pago");
        formaRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formaRadioActionPerformed(evt);
            }
        });

        comprobanteRadio.setText("Comprobante");
        comprobanteRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobanteRadioActionPerformed(evt);
            }
        });

        cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                clienteKeyTyped(evt);
            }
        });

        forma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta" }));
        forma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formaActionPerformed(evt);
            }
        });

        comprobante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Factura", "Nota de Crédito" }));
        comprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobanteActionPerformed(evt);
            }
        });

        estadoRadio.setText("Estado");
        estadoRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoRadioActionPerformed(evt);
            }
        });

        estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAGADO", "INPAGO" }));
        estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(desde, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(hasta, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(clienteRadio)
                        .addGap(42, 42, 42)
                        .addComponent(cliente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formaRadio)
                            .addComponent(comprobanteRadio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(forma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comprobante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(41, 41, 41)
                .addComponent(estadoRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(desde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(hasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(mostrar)))
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteRadio)
                    .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadoRadio)
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formaRadio)
                    .addComponent(forma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comprobanteRadio)
                    .addComponent(comprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfacturasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturasMouseMoved

        int col = tfacturas.columnAtPoint(new Point(evt.getX(), evt.getY()));
        if (col == 1) {
            tfacturas.setCursor(new Cursor(Cursor.HAND_CURSOR));
        }else{
            tfacturas.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tfacturasMouseMoved

    public void cargar(Date de, Date ha){
        //Crea Hipervinculo en Columna Numero de Factura     
     tfacturas.getColumnModel().getColumn(1).setCellRenderer(new TableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, final Object value, boolean arg2,
                boolean arg3, int arg4, int arg5) {
            final JLabel lab = new JLabel("<html><a href=\"" + value + "\">" + value + "</a>");
            return lab;
        }
    });    
    String []Registros=new String[12];
    model= (DefaultTableModel) tfacturas.getModel();
    model = Dominio.eliminarTabla(model); 
    int ventas=0;
        try {
              String consulta="";
              ResultSet rsfactura = null;
              String filtros="";
                  if (clienteRadio.isSelected()){
                      filtros+=" and lower(c.nombre) like '%"+cliente.getText().toLowerCase()+"%'";
                  }
                  if (formaRadio.isSelected()){
                     filtros+=" and fac.forma_pago ='"+forma.getSelectedItem().toString()+"'"; 
                  }
                  if (comprobanteRadio.isSelected()){  
                      filtros+=" and fac.comprobante ='"+comprobante.getSelectedItem().toString()+"'";
                  }
                  if (estadoRadio.isSelected()){
                      filtros+=" and fac.estado ='"+estado.getSelectedItem().toString()+"' ";
                  }              
                  consulta+="SELECT pa.fecha, fac.id_factura, c.nombre, fac.forma_pago,fac.comprobante,fac.descuento,fac.motivo, fac.estado,"
                          + "pa.entregado,fac.total,pa.estado FROM ((misclientes as c inner join facturas as fac on c.id_mcliente=fac.id_mcliente) inner join pagos as pa on pa.id_factura=fac.id_factura) "
                          + " WHERE fac.eliminado='0' and pa.fecha>='"+de+"' and pa.fecha<='"+ha+"' "+filtros+ " order by pa.fecha, fac.id_factura asc";
              rsfactura = this.p.bd.mostrarFacturasVentas(consulta); //toma fila por fila 
              float entregado=0;
              float ganancias=0;
              float costos=0;
              float total=0;
              float totalFactura=0;
              float descuentoFactura;
              String estadoPago;
              while(rsfactura.next())
              {                
                  descuentoFactura = Float.parseFloat(Dominio.A2Decimales(rsfactura.getString(6))); //descuento
                  totalFactura= Float.parseFloat(Dominio.A2Decimales(rsfactura.getString(10)));
                  Registros[0]= Dominio.formatofechaJCalender.format(Dominio.formatofechaBD.parse(rsfactura.getString(1))); //fecha 
                  String id_factura = rsfactura.getString(2); //nro_factura  
                  Registros[1]= id_factura; //numero 
                  Registros[2]= rsfactura.getString(3); //cliente
                  Registros[3]= rsfactura.getString(4); //forma de pago
                  Registros[4]= rsfactura.getString(5); //comprobante
                  Registros[5]= Dominio.A2Decimales(this.p.bd.obtenerPromedioDeDescuentos(id_factura));
                  Registros[6]= rsfactura.getString(7); //motivo
                  Registros[7]= rsfactura.getString(8); //estado
                  estadoPago= rsfactura.getString(11); //estadoPago
                  if (estadoPago.equals("pagoInicial")){
                    ResultSet rsCostos = this.p.bd.obtenerCostosDeFactura(id_factura);                
                     if (rsCostos.next()){
                       Registros[8]= Dominio.A2Decimales(rsCostos.getString(1));;   //costos                    
                    }
                     Registros[9]= Dominio.A2Decimales(Float.toString(totalFactura-Float.parseFloat(Registros[8]))); //ganancia  = total-costos 
                     Registros[11]= Dominio.A2Decimales(rsfactura.getString(10)); //total
                     costos+= Float.parseFloat(Registros[8]);
                     ganancias+= Float.parseFloat(Registros[9]);
                     total+= Float.parseFloat(Registros[11]);
                     ventas++;
                  }else{
                      Registros[8]="-";
                      Registros[9]="-";
                      Registros[11]="-";       
                  }
                  Registros[10]= Dominio.A2Decimales(rsfactura.getString(9)); //entregado
                  
                  entregado+= Float.parseFloat(Registros[10]);
                  model.addRow(Registros);      
              }
              tfacturas.setModel(model);
              Float saldoFavor = this.p.bd.obtenerTodosSaldoAfavor(de,ha);
              afavor.setText(Dominio.A2Decimales(Float.toString(saldoFavor)));
              cos.setText(Dominio.A2Decimales(Float.toString(costos)));
              gan.setText(Dominio.A2Decimales(Float.toString(ganancias)));
              ent.setText(Dominio.A2Decimales(Float.toString(entregado+saldoFavor)));
              tot.setText(Dominio.A2Decimales(Float.toString(total)));
          
            
        } catch (SQLException ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
        }
    cantidad.setText("Cantidad de Facturas de Ventas: "+ventas);
  }  
    private void tfacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturasMouseClicked

        int col = tfacturas.columnAtPoint(new Point(evt.getX(), evt.getY()));
        if (col==1){
            try {
                int fila = tfacturas.rowAtPoint(new Point(evt.getX(), evt.getY()));
                String numero = (String) tfacturas.getModel().getValueAt(fila, col);
                VerFactura vf = new VerFactura(this.p,numero);
                this.p.escritorio.add(vf);
                this.p.escritorio.setSelectedFrame(vf);
                vf.show();
                vf.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
       
    }//GEN-LAST:event_tfacturasMouseClicked

    private void tfacturasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturasMouseEntered

    }//GEN-LAST:event_tfacturasMouseEntered

    private void tfacturasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturasMouseExited

    }//GEN-LAST:event_tfacturasMouseExited

    private void desdeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_desdeMouseReleased

    }//GEN-LAST:event_desdeMouseReleased

    private void desdePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_desdePropertyChange
        if (desde.getDate().after(hasta.getDate())){
            hasta.setDate(desde.getDate());
        }
        cargar(desde.getDate(),hasta.getDate());
    }//GEN-LAST:event_desdePropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     if (tfacturas.getRowCount()==0){
         JOptionPane.showMessageDialog(this, "Error. La tabla esta vacía.", "Error", JOptionPane.ERROR_MESSAGE);
     }   else{
        //creamos un JFileChooser para elegir donde queremos guardar nuestro archivo
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar Archivo");
        chooser.setMultiSelectionEnabled(false);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null)==JFileChooser.APPROVE_OPTION){
            Thread t=  new Thread(){
                     public void run(){
                          JOptionPane.showMessageDialog(null, "Archivo creado con éxito", "Exportando a Excel. Por favor espere...", JOptionPane.INFORMATION_MESSAGE);
                         }
                   };
            t.start();
            String file = chooser.getSelectedFile().toString().concat(".xlsx");
            XSSFWorkbook excel = new XSSFWorkbook(); //libro excel
            XSSFSheet hoja = excel.createSheet(); //Crea una hoj
            XSSFRow filaPeriodo = hoja.createRow(0); //Creo una fila                     
            filaPeriodo.createCell(0).setCellValue("Periodo");
            filaPeriodo.createCell(1).setCellValue("Desde");
            filaPeriodo.createCell(2).setCellValue(Dominio.formatofechaJCalender.format(desde.getDate()));
            filaPeriodo.createCell(3).setCellValue("Hasta");
            filaPeriodo.createCell(4).setCellValue(Dominio.formatofechaJCalender.format(hasta.getDate()));         
            hoja.createRow(1);
            XSSFRow filaTitulo = hoja.createRow(2); //Creo una fila
            filaTitulo.createCell(0).setCellValue("Fecha");
            filaTitulo.createCell(1).setCellValue("Número");
            filaTitulo.createCell(2).setCellValue("Cliente");
            filaTitulo.createCell(3).setCellValue("Forma de Pago");
            filaTitulo.createCell(4).setCellValue("Comprobante");
            filaTitulo.createCell(5).setCellValue("Descuento (Promedio %)");
            filaTitulo.createCell(6).setCellValue("Motivo");
            filaTitulo.createCell(7).setCellValue("Estado");
            if (this.p.usuarioLogueado.getPermisos().contains("PUEDE VER DATOS SENSIBLES EN CAJA")){
                filaTitulo.createCell(8).setCellValue("Costos");
                filaTitulo.createCell(9).setCellValue("Ganancias");
                filaTitulo.createCell(10).setCellValue("Entregado");
                filaTitulo.createCell(11).setCellValue("Total");
            }else{
               filaTitulo.createCell(8).setCellValue("Entregado");
               filaTitulo.createCell(9).setCellValue("Total"); 
            }

            XSSFRow filasDatos;
            int i;
            for (i=0;i<tfacturas.getRowCount();i++){          
                filasDatos = hoja.createRow((i+3));
                for (int j=0;j<tfacturas.getColumnCount();j++){
                     filasDatos.createCell(j).setCellValue(tfacturas.getValueAt(i, j).toString());
                }               
            }           
            XSSFRow filaFinal = hoja.createRow(i+4); //Creo una fila
            filaFinal.createCell(7).setCellValue("Saldo Clientes");
            filaFinal.createCell(10).setCellValue(afavor.getText());
            filaFinal = hoja.createRow(i+6); //Creo una fila
            filaFinal.createCell(7).setCellValue("TOTAL");
            if (this.p.usuarioLogueado.getPermisos().contains("PUEDE VER DATOS SENSIBLES EN CAJA")){
                filaFinal.createCell(8).setCellValue(cos.getText());
                filaFinal.createCell(9).setCellValue(gan.getText());
                filaFinal.createCell(10).setCellValue(ent.getText());
                filaFinal.createCell(11).setCellValue(tot.getText());
            }else{
                filaFinal.createCell(8).setCellValue(ent.getText());
                filaFinal.createCell(9).setCellValue(tot.getText());
            }    
            try {
                excel.write(new FileOutputStream(file));
                Desktop.getDesktop().open(new File(file));
            } catch (IOException ex) {
                Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "No se pudo crear el Archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
            t.suspend();
        }
     }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hastaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_hastaPropertyChange
        if (hasta.getDate().before(desde.getDate())){
            desde.setDate(hasta.getDate());
        }
        cargar(desde.getDate(),hasta.getDate());
    }//GEN-LAST:event_hastaPropertyChange

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
        try {
            ResultSet rsFecha = this.p.bd.obtenerFechaMinimaYMaxima(); //toma fila por fila
            if (rsFecha.next()){
                desde.setDate(Dominio.formatofechaBD.parse(rsFecha.getString(1)));
                hasta.setDate(Dominio.formatofechaBD.parse(rsFecha.getString(2)));
                cargar(desde.getDate(),hasta.getDate());
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mostrarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       desde.setDate(new Date());
       hasta.setDate(new Date());
       cargar(desde.getDate(),hasta.getDate());
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clienteRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteRadioActionPerformed

           cargar(desde.getDate(),hasta.getDate()); 
        
    }//GEN-LAST:event_clienteRadioActionPerformed

    private void formaRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formaRadioActionPerformed

           cargar(desde.getDate(),hasta.getDate()); 
        
    }//GEN-LAST:event_formaRadioActionPerformed

    private void comprobanteRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobanteRadioActionPerformed

           cargar(desde.getDate(),hasta.getDate()); 
        
    }//GEN-LAST:event_comprobanteRadioActionPerformed

    private void estadoRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoRadioActionPerformed
    
           cargar(desde.getDate(),hasta.getDate()); 
        
    }//GEN-LAST:event_estadoRadioActionPerformed

    private void clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clienteKeyTyped
        if (clienteRadio.isSelected()){
           cargar(desde.getDate(),hasta.getDate()); 
        }
    }//GEN-LAST:event_clienteKeyTyped

    private void formaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formaActionPerformed
        if (formaRadio.isSelected()){
           cargar(desde.getDate(),hasta.getDate()); 
        }
    }//GEN-LAST:event_formaActionPerformed

    private void estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoActionPerformed
         if (estadoRadio.isSelected()){
           cargar(desde.getDate(),hasta.getDate()); 
        } 
    }//GEN-LAST:event_estadoActionPerformed

    private void comprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobanteActionPerformed
         if (comprobanteRadio.isSelected()){
           cargar(desde.getDate(),hasta.getDate()); 
        } 
    }//GEN-LAST:event_comprobanteActionPerformed

    private void ganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ganActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afavor;
    private javax.swing.JLabel cantidad;
    private javax.swing.JTextField cliente;
    private javax.swing.JRadioButton clienteRadio;
    private javax.swing.JComboBox<String> comprobante;
    private javax.swing.JRadioButton comprobanteRadio;
    private javax.swing.JTextField cos;
    private com.toedter.calendar.JDateChooser desde;
    private javax.swing.JTextField ent;
    private javax.swing.JComboBox<String> estado;
    private javax.swing.JRadioButton estadoRadio;
    private javax.swing.JComboBox<String> forma;
    private javax.swing.JRadioButton formaRadio;
    private javax.swing.JTextField gan;
    private com.toedter.calendar.JDateChooser hasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton mostrar;
    private javax.swing.JTable tfacturas;
    private javax.swing.JTextField tot;
    // End of variables declaration//GEN-END:variables
  
 }
