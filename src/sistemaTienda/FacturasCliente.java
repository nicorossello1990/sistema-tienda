/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemaTienda;

import claseConectar.Dominio;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Point;
import java.beans.PropertyVetoException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author nico_
 */
public class FacturasCliente extends javax.swing.JInternalFrame {

    Principal p;
    DefaultTableModel model;
    String id_cliente;
    EstadisticasClientes estadisticas=null;
    Deudores deudores=null;

    FacturasCliente(Principal p, String cod,String nom,String tel, String cor ) {
            initComponents();
            this.p=p;
            this.id_cliente=cod;           
            this.codigo.setText("Código Cliente: "+cod);
            this.nombre.setText("Nombre y Apellido: "+nom);
            this.telefono.setText("Teléfono: "+tel);
            this.correo.setText("Correo Electrónico: "+cor);
            this.setTitle("Facturas del cliente "+nom);
            this.setLocation((p.getSize().width/2)-(this.getWidth()/2), (p.getSize().height/2)-(this.getHeight()/2));
            cargar("",null,null,null);
    }

    FacturasCliente( EstadisticasClientes estadisticas, Principal p, String nombre) {
        try {
        initComponents();
        this.p=p;
        this.estadisticas=estadisticas;
        this.nombre.setText("Nombre y Apellido: "+nombre);
        ResultSet rsCliente = this.p.bd.mostrarDatosCliente(nombre);
            if (rsCliente.next()){
                this.codigo.setText("Código Cliente: "+rsCliente.getString(1));
                this.id_cliente=rsCliente.getString(1);
                this.telefono.setText("Teléfono: "+rsCliente.getString(2));
                this.correo.setText("Correo Electrónico: "+rsCliente.getString(3));  
                this.saldofavor.setText(rsCliente.getString(4));
                this.setLocation((p.getSize().width/2)-(this.getWidth()/2), (p.getSize().height/2)-(this.getHeight()/2)); 
                this.setTitle("Facturas del cliente "+nombre); 
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     FacturasCliente(Deudores deudores, Principal p, String nombre) {
       try{
        initComponents();
        this.deudores =deudores;
        this.p=p;
        this.nombre.setText("Nombre y Apellido: "+nombre);
        ResultSet rsCliente = this.p.bd.mostrarDatosCliente(nombre);
            if (rsCliente.next()){
                this.codigo.setText("Código Cliente: "+rsCliente.getString(1));
                this.id_cliente=rsCliente.getString(1);
                this.telefono.setText("Teléfono: "+rsCliente.getString(2));
                this.correo.setText("Correo Electrónico: "+rsCliente.getString(3));
                this.saldofavor.setText(rsCliente.getString(4));
                this.setLocation((p.getSize().width/2)-(this.getWidth()/2), (p.getSize().height/2)-(this.getHeight()/2)); 
                this.estado.setSelectedItem("INPAGO");
                this.setTitle("Facturas adeudadas del cliente "+nombre); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
    }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        codigo = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        correo = new javax.swing.JLabel();
        telefono = new javax.swing.JLabel();
        saldo = new javax.swing.JLabel();
        saldofavor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        mostrar = new javax.swing.JButton();
        buscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        hasta = new com.toedter.calendar.JDateChooser();
        desde = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        estado = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        cantidad2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tfacturas2 = new javax.swing.JTable();
        totalCliente = new javax.swing.JLabel();
        totalSaldoDeudor = new javax.swing.JLabel();

        jMenuItem1.setText("Agregar Pago");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle Cliente"));
        jPanel1.setAutoscrolls(true);

        codigo.setText("Código Cliente:");

        nombre.setText("Nombre y Apellido: ");

        correo.setText("Correo Electrónico: ");

        telefono.setText("Teléfono: ");

        saldo.setText("Saldo a Favor: ");

        saldofavor.setEditable(false);
        saldofavor.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(codigo)
                        .addGap(161, 161, 161)
                        .addComponent(nombre))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(telefono)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(correo)))
                .addGap(159, 159, 159)
                .addComponent(saldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saldofavor, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(795, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo)
                    .addComponent(nombre)
                    .addComponent(saldo)
                    .addComponent(saldofavor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefono)
                    .addComponent(correo))
                .addGap(64, 64, 64))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Factura de Venta"));
        jPanel3.setAutoscrolls(true);

        mostrar.setText("Mostrar Todos");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });

        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarKeyTyped(evt);
            }
        });

        jLabel1.setText("Buscar por Fecha");

        hasta.setDate(new Date());
        hasta.setMinSelectableDate(new java.util.Date(-62135755099000L));
        hasta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                hastaPropertyChange(evt);
            }
        });

        desde.setBackground(new java.awt.Color(255, 0, 51));
        desde.setForeground(java.awt.Color.blue);
        desde.setToolTipText("");
        desde.setDate(new Date());
        desde.setMinSelectableDate(new java.util.Date(-62135755099000L));
        desde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                desdeMouseReleased(evt);
            }
        });
        desde.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                desdePropertyChange(evt);
            }
        });

        jLabel2.setText("Desde");

        jLabel3.setText("Hasta");

        jLabel4.setText("Buscar por Nro");

        jLabel6.setText("Buscar por Estado");

        estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAGADO", "INPAGO" }));
        estado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estadoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                estadoMouseReleased(evt);
            }
        });
        estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(desde, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hasta, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addComponent(mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(desde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Facturas de Venta"));
        jPanel5.setToolTipText("");
        jPanel5.setAutoscrolls(true);

        cantidad2.setText("Cantidad de Facturas de Ventas: 0");

        tfacturas2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Número", "Forma de Pago", "Comprobante", "Descuento", "Motivo", "Total", "Estado", "Entregado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tfacturas2.setComponentPopupMenu(jPopupMenu1);
        tfacturas2.getTableHeader().setReorderingAllowed(false);
        tfacturas2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tfacturas2MouseMoved(evt);
            }
        });
        tfacturas2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfacturas2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tfacturas2);

        totalCliente.setText("Total Cliente: ");

        totalSaldoDeudor.setText("Total Saldo Deudor: ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(cantidad2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalSaldoDeudor, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(totalCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cantidad2)
                    .addComponent(totalCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalSaldoDeudor)
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void cargar(String cod, Date de, Date ha, String esta){
     tfacturas2.getColumnModel().getColumn(1).setCellRenderer(new TableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, final Object value, boolean arg2,
                boolean arg3, int arg4, int arg5) {
            final JLabel lab = new JLabel("<html><a href=\"" + value + "\">" + value + "</a>");
            return lab;
        }
    });
          
    String consulta="";
    String []Registros=new String[9];
    model = (DefaultTableModel) tfacturas2.getModel();
    model = Dominio.eliminarTabla(model); 
    float totalCliente=0,totalEntregado=0;
    
    try {
          ResultSet rsfactura = null;
          if (cod!=null){ //Busca por numero            
                 consulta="SELECT f.fecha,f.id_factura,f.forma_pago,f.comprobante,f.motivo,f.total,f.estado,f.entregado FROM facturas as f  WHERE concat(f.id_factura) LIKE '%"+cod+"%' and f.eliminado = '0'  and f.id_mcliente='"+this.id_cliente+"' order by f.fecha,f.id_factura";
              }else{
                  if (de!=null && ha!=null){
                   consulta="SELECT f.fecha,f.id_factura,f.forma_pago,f.comprobante,f.motivo,f.total,f.estado,f.entregado  FROM facturas as f  WHERE  f.fecha>='"+de+"' and f.fecha <='"+ha+"' and f.eliminado = '0'  and f.id_mcliente='"+this.id_cliente+"' order by f.fecha,f.id_factura";
                  }else{ 
                  if (esta!=null){
                      consulta="SELECT f.fecha,f.id_factura,f.forma_pago,f.comprobante,f.motivo,f.total,f.estado,f.entregado  FROM facturas as f  WHERE  f.estado='"+esta+"' and f.eliminado = '0'  and f.id_mcliente='"+this.id_cliente+"' order by f.fecha,f.id_factura";              
                  }
                  }}
          
              rsfactura = this.p.bd.mostrarFacturasVentas(consulta); //toma fila por fila 
              while(rsfactura.next())
              {

                  Registros[0] =Dominio.formatofechaJCalender.format(Dominio.formatofechaBD.parse(rsfactura.getString(1)));  //fecha
                  Registros[1]= rsfactura.getString(2);//id
                  Registros[2]=rsfactura.getString(3); //forma
                  Registros[3]=rsfactura.getString(4); //comprobante
                  Registros[4]= Dominio.A2Decimales(this.p.bd.obtenerPromedioDeDescuentos(rsfactura.getString(2)));//oBTIENE Descuentos totales    
                  Registros[5]=rsfactura.getString(5); //motivo
                  
                  Registros[6]=Dominio.A2Decimales(rsfactura.getString(6)); //total
                  totalCliente=totalCliente+Float.parseFloat(rsfactura.getString(6));
                  Registros[8]=Dominio.A2Decimales(rsfactura.getString(8)); //entregado
                  totalEntregado=totalEntregado+Float.parseFloat(rsfactura.getString(8));
                  Registros[7]=rsfactura.getString(7); //
                  model.addRow(Registros);      
              }
              this.totalCliente.setText("Total Cliente: "+Dominio.A2Decimales(Float.toString(totalCliente)));
              float saldoDeudor = totalCliente-totalEntregado;
              this.totalSaldoDeudor.setText("Total Saldo Deudor: "+Dominio.A2Decimales(Float.toString(saldoDeudor)));
              tfacturas2.setModel(model);  
        } catch (SQLException ex) {
            Logger.getLogger(BuscarFacturaVenta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
     cantidad2.setText("Cantidad de Facturas de Ventas: "+tfacturas2.getRowCount());
  }
    
    private void desdePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_desdePropertyChange
        if (desde.getDate().after(hasta.getDate())){
            hasta.setDate(desde.getDate());
        }
        cargar(null,desde.getDate(),hasta.getDate(),null);
    }//GEN-LAST:event_desdePropertyChange

    private void desdeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_desdeMouseReleased

    }//GEN-LAST:event_desdeMouseReleased

    private void hastaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_hastaPropertyChange
        if (hasta.getDate().before(desde.getDate())){
            desde.setDate(hasta.getDate());
        }
        cargar(null,desde.getDate(),hasta.getDate(),null);
    }//GEN-LAST:event_hastaPropertyChange

    private void buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyTyped
        if (buscar.getText().length() == Dominio.DOM_NOMBRES){
            evt.consume();
        }
    }//GEN-LAST:event_buscarKeyTyped

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
        cargar(buscar.getText(),null,null,null);
    }//GEN-LAST:event_buscarKeyReleased

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

    }//GEN-LAST:event_buscarActionPerformed

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
        try {
            ResultSet rsFecha = this.p.bd.obtenerFechaMinimaYMaxima(id_cliente); //toma fila por fila
            if (rsFecha.next()){
                desde.setDate(Dominio.formatofechaBD.parse(rsFecha.getString(1)));
                hasta.setDate(Dominio.formatofechaBD.parse(rsFecha.getString(2)));
                cargar(null,desde.getDate(),hasta.getDate(),null);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_mostrarActionPerformed

    private void tfacturas2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturas2MouseMoved
        int col = tfacturas2.columnAtPoint(new Point(evt.getX(), evt.getY()));
        if (col == 1) {
            tfacturas2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        }else{
            tfacturas2.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tfacturas2MouseMoved

    private void tfacturas2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfacturas2MouseClicked
        int col = tfacturas2.columnAtPoint(new Point(evt.getX(), evt.getY()));
        if (col==1){
            try {
                int fila = tfacturas2.rowAtPoint(new Point(evt.getX(), evt.getY()));
                String numero = (String) tfacturas2.getModel().getValueAt(fila, col);
                VerFactura vf = new VerFactura(this.p,numero);
                this.p.escritorio.add(vf);
                this.p.escritorio.setSelectedFrame(vf);
                vf.show();
                vf.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(FacturasCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       
    }//GEN-LAST:event_tfacturas2MouseClicked

    private void estadoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadoMouseReleased
        
    }//GEN-LAST:event_estadoMouseReleased

    private void estadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadoMouseClicked
        
    }//GEN-LAST:event_estadoMouseClicked

    private void estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoActionPerformed
        cargar(null,null,null,estado.getSelectedItem().toString());
    }//GEN-LAST:event_estadoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         if (tfacturas2.getSelectedRow()== -1){
           JOptionPane.showMessageDialog(this,"No ha seleccionado ninguna factura","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
         }else{
             model =  (DefaultTableModel) tfacturas2.getModel();
             int fila = tfacturas2.getSelectedRow();
             String estado = model.getValueAt(fila, 7).toString();
             if (estado.equals("PAGADO")){
                 JOptionPane.showMessageDialog(this,"La factura escogida ha sido pagada","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
             } else{
               float total=   Float.parseFloat(model.getValueAt(fila, 6).toString());
               float entregado=   Float.parseFloat(model.getValueAt(fila, 8).toString());
               float pendiente = total-entregado;
               float saldoFloat = Float.parseFloat(saldofavor.getText());
               String numero = model.getValueAt(fila, 1).toString();
               if (saldoFloat>=pendiente){
                     saldoFloat=saldoFloat-pendiente;
                     entregado=0;    
                     estado="PAGADO";
                     int n=this.p.bd.agregarPago(numero,estado,Float.toString(pendiente),Float.toString(total));
                     if (n>0){
                         JOptionPane.showMessageDialog(this, "El pago fue saldado con el saldo a favor del cliente.", "Pago de Factura", JOptionPane.INFORMATION_MESSAGE);
                         this.p.bd.actualizarSaldoClientePorID(id_cliente,new Date(),Float.toString(saldoFloat));
                         saldofavor.setText(Float.toString(saldoFloat));
                         if(deudores!=null){
                             deudores.cargar();
                         }
                         if (estadisticas!=null){
                             estadisticas.cargar();
                         }
                     }else{
                          JOptionPane.showMessageDialog(this,"Error. No se pudo actualizar la factura","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
                     }
                       cargar("", null, null, null);
                }else{
                   if (saldoFloat>0){      
                      JOptionPane.showMessageDialog(this, "El Cliente tiene saldo a favor en su cuenta, se descontará el valor", "Pago de Factura", JOptionPane.INFORMATION_MESSAGE);
                      pendiente = pendiente-saldoFloat;
                      entregado = entregado + saldoFloat;
                      saldoFloat = 0;
                   } 
                      String pago=JOptionPane.showInputDialog(this, "Escriba el dinero agregado. Deuda pendiente: "+pendiente, "Pago de Factura", JOptionPane.QUESTION_MESSAGE);
                      try{
                      if (pago!=null){                    
                         if ( pago.equals("")){
                             JOptionPane.showMessageDialog(this,"No ha ingresado dinero","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
                         }else{
                            float totalEntregado=entregado +Float.parseFloat(pago);
                            if (totalEntregado>=total){
                               pago = Float.toString(pendiente);
                               estado="PAGADO";
                               totalEntregado=total;
                              }
                             int n = this.p.bd.agregarPago(numero,estado,pago,Float.toString(totalEntregado));
                             if (n>0){
                                JOptionPane.showMessageDialog(this, "Pago agregado con éxito.", "Pago de Factura", JOptionPane.INFORMATION_MESSAGE);
                                this.p.bd.actualizarSaldoClientePorID(id_cliente,new Date(),Float.toString(saldoFloat));
                                saldofavor.setText(Float.toString(saldoFloat));
                             if(deudores!=null){
                                 deudores.cargar();
                              }
                              if (estadisticas!=null){
                                 estadisticas.cargar();
                              }
                             }else{
                                JOptionPane.showMessageDialog(this,"Error. No se pudo actualizar la factura","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
                              }
                               cargar("", null, null, null);
                          }
                       }
                      }
                     catch(NumberFormatException ex){ // handle your exception
                          JOptionPane.showMessageDialog(this,"Error en la cantidad ingresada. Ingrese números enteros","Error", JOptionPane.ERROR_MESSAGE); //Tipo de mensaje 
                      }
                   }
                }
           }
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscar;
    private javax.swing.JLabel cantidad2;
    private javax.swing.JLabel codigo;
    private javax.swing.JLabel correo;
    private com.toedter.calendar.JDateChooser desde;
    private javax.swing.JComboBox<String> estado;
    private com.toedter.calendar.JDateChooser hasta;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton mostrar;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel saldo;
    private javax.swing.JTextField saldofavor;
    private javax.swing.JLabel telefono;
    private javax.swing.JTable tfacturas2;
    private javax.swing.JLabel totalCliente;
    private javax.swing.JLabel totalSaldoDeudor;
    // End of variables declaration//GEN-END:variables


}
